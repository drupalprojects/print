<?php
// $Id$

/**
 * @file
 * Displays Printer-friendly versions of Drupal pages.
 */

include_once('print_mail.inc');
include_once('print_mail.admin.inc');

define('PRINTMAIL_PATH', 'printmail');

define('PRINT_MAIL_LINK_POS_DEFAULT', 'link');
define('PRINT_MAIL_SHOW_LINK_DEFAULT', 1);
define('PRINT_MAIL_NODE_LINK_VISIBILITY_DEFAULT', 0);
define('PRINT_MAIL_NODE_LINK_PAGES_DEFAULT', '');
define('PRINT_MAIL_LINK_CLASS_DEFAULT', 'print-mail');
define('PRINT_MAIL_SYS_LINK_VISIBILITY_DEFAULT', 1);
define('PRINT_MAIL_SYS_LINK_PAGES_DEFAULT', '');
define('PRINT_MAIL_LINK_USE_ALIAS_DEFAULT', 0);
define('PRINT_MAIL_BOOK_LINK_DEFAULT', 1);
define('PRINT_MAIL_HOURLY_THRESHOLD', 3);
define('PRINT_MAIL_TEASER_DEFAULT_DEFAULT', 1);
define('PRINT_MAIL_TEASER_CHOICE_DEFAULT', 1);

/**
 * Implementation of hook_menu().
 */
function print_mail_menu($may_cache) {
  $items = array();

  if ($may_cache) {
    $items[] = array(
      'path' => PRINTMAIL_PATH,
      'title' => t('Send page by e-mail'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('print_mail_form'),
      'access' => user_access('access print'),
      'type' => MENU_CALLBACK,
    );
    $items[] = array(
      'path' => 'admin/settings/print/email',
      'title' => t('e-mail'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('print_mail_settings'),
      'access'  => user_access('administer print'),
      'weight' => 2,
      'type' => MENU_LOCAL_TASK,
    );
  }

  return $items;
}

/**
 * Implementation of hook_link().
 */
function print_mail_link($type, $node = NULL, $teaser = FALSE) {
  $print_mail_link_pos = variable_get('print_mail_link_pos', array(PRINT_MAIL_LINK_POS_DEFAULT => PRINT_MAIL_LINK_POS_DEFAULT));
  $print_mail_link_use_alias = variable_get('print_mail_link_use_alias', PRINT_MAIL_LINK_USE_ALIAS_DEFAULT);
  $allowed_type = print_mail_link_allowed(array('type' => $type, 'node' => $node, 'teaser' => $teaser));
  if (($allowed_type) && !empty($print_mail_link_pos['link'])) {
    drupal_add_css(drupal_get_path('module', 'print') .'/css/printlinks.css');
    $links = array();
    $format = theme('print_mail_format_link');

    // Show book link
    if ($allowed_type === PRINT_ALLOW_BOOK_LINK) {
      $links['book_mail'] = array('href' => PRINTMAIL_PATH .'/book/export/html/'. $node->nid,
                                 'title' => $format['text'],
                                 'attributes' => $format['attributes'],
                                 'html' => $format['html'],
      );

      return $links;
    }
    elseif ($allowed_type === PRINT_ALLOW_NORMAL_LINK) {
      $query_arr = $_GET;
      if ($type == 'comment') {
        $query_arr['comment'] = $node->cid;
      }
      $query = print_query_string_encode($query_arr, array('q'));
      if (empty($query)) $query = NULL;

      if ($print_mail_link_use_alias) {
        $path = drupal_get_path_alias('node/'. $node->nid);
      }
      else {
        $path = $node->nid;
      }

      $links['print_mail'] = array('href' => PRINTMAIL_PATH .'/'. $path,
                                  'title' => $format['text'],
                                  'attributes' => $format['attributes'],
                                  'html' => $format['html'],
                                  'query' => $query,
      );

      return $links;
    }
  }
  else {
    return;
  }
}

/**
 * Implementation of hook_help().
 */
function print_mail_help($path) {
  $print_mail_link_pos = variable_get('print_mail_link_pos', array(PRINT_MAIL_LINK_POS_DEFAULT => PRINT_MAIL_LINK_POS_DEFAULT));
  if ((preg_match('!^node/!i', $path) == 0) &&
      !(empty($print_mail_link_pos['link']) && empty($print_mail_link_pos['corner']))) {
    static $output = FALSE;

    if ($output === FALSE) {
      $output = TRUE;

      $link = print_mail_insert_link();
      if ($link) {
        return "<span class='print-syslink'>$link</span>";
      }
    }
  }
}

/**
 * Implementation of hook_nodeapi().
 */
function print_mail_nodeapi(&$node, $op = 'view', $teaser, $page) {
  switch ($op) {
    case 'view':
      $print_mail_link_pos = variable_get('print_mail_link_pos', array(PRINT_MAIL_LINK_POS_DEFAULT => PRINT_MAIL_LINK_POS_DEFAULT));
      if (($teaser === FALSE) && !empty($print_mail_link_pos['corner']) &&
          (preg_match('!^print!i', $_GET['q']) == 0)) {
        $link = print_mail_insert_link(NULL, $node);
        if ($link) {
          $node->content['print_mail_link'] = array(
            '#value' => "<span class='print-link'>$link</span>",
            '#weight' => -2,
          );
        }
      }
  }
}

/**
 * Implementation of hook_form_alter().
 */
function print_mail_form_alter($form_id, &$form) {
  // Add the node-type settings option to activate the mail version link
  if ($form_id == 'node_type_form') {
    $form['print']['print_mail_display'] = array(
      '#type' => 'checkbox',
      '#title' => t('Show send by e-mail link'),
      '#default_value' => variable_get('print_mail_display_'. $form['#node_type']->type, PRINT_TYPE_SHOW_LINK_DEFAULT),
      '#description' => t('Displays a link to send the content by e-mail. Further configuration is available on the !settings.', array('!settings' => l(t('settings page'), 'admin/settings/print' ))),
    );
    $form['print']['print_mail_display_comment'] = array(
      '#type' => 'checkbox',
      '#title' => t('Show send by e-mail link in individual comments'),
      '#default_value' => variable_get('print_mail_display_comment_'. $form['#node_type']->type, PRINT_TYPE_COMMENT_LINK_DEFAULT),
      '#description' => t('Displays a link to send the comment by e-mail. Further configuration is available on the !settings.', array('!settings' => l(t('settings page'), 'admin/settings/print' ))),
    );
  }
}

/**
 * Format the send by e-mail link
 *
 * @return
 *   array of formatted attributes
 * @ingroup themeable
 */
function theme_print_mail_format_link() {
  $print_mail_link_class  = variable_get('print_mail_link_class', PRINT_MAIL_LINK_CLASS_DEFAULT);
  $print_mail_show_link = variable_get('print_mail_show_link', PRINT_MAIL_SHOW_LINK_DEFAULT);

  $text = t('Send to friend');
  $img = drupal_get_path('module', 'print') .'/icons/mail_icon.gif';
  $title = t('Send this page by e-mail.');
  $class = strip_tags($print_mail_link_class);
  $new_window = FALSE;
  $format = _print_format_link_aux($print_mail_show_link, $text, $img);

  return array('text' => $format['text'],
               'html' => $format['html'],
               'attributes' => print_fill_attributes($title, $class, $new_window),
              );
}

/**
 * Auxiliary function to display a formatted send by e-mail link
 *
 * Function made available so that developers may call this function from
 * their defined pages/blocks.
 *
 * @param $path
 *   path of the original page (optional). If not specified, the current URL
 *   is used
 * @param $node
 *   an optional node object, to be used in defining the path, if used, the
 *   path argument is irrelevant
 * @return
 *   string with the HTML link to the printer-friendly page
 */
function print_mail_insert_link($path = NULL, $node = NULL) {
  if ($node !== NULL) {
    $nid = $node->nid;
    $path = 'node/'. $nid;
    $allowed_type = print_mail_link_allowed(array('node' => $node));
  }
  else {
    if ($path === NULL) {
      $nid = preg_replace('!^node/!', '', $_GET['q']);
      $path = $_GET['q'];
    }
    else {
      $nid = NULL;
    }
    $allowed_type = print_mail_link_allowed(array('path' => $path));
  }

  if ($allowed_type) {
    if ($nid !== NULL) {
      if ($allowed_type === PRINT_ALLOW_BOOK_LINK) {
        $path = 'book/export/html/'. $nid;
      }
      else {
        if (variable_get('print_mail_link_use_alias', PRINT_MAIL_LINK_USE_ALIAS_DEFAULT)) {
          $path = drupal_get_path_alias($path);
        }
        else {
          $path = $nid;
        }
      }
      $path = PRINTMAIL_PATH .'/'. $path;
      $query = print_query_string_encode($_GET, array('q'));
      if (empty($query)) {
        $query = NULL;
      }
    }
    else {
      $query = NULL;
    }
    drupal_add_css(drupal_get_path('module', 'print') .'/css/printlinks.css');
    $format = theme('print_mail_format_link');
    return '<span class="print_mail">'. l($format['text'], $path, $format['attributes'], $query, NULL, TRUE, $format['html']) .'</span>';
  }
  else {
    return FALSE;
  }
}

/**
 * Determine a the link to send by e-mail is allowed depending on all possible settings
 *
 * @param $args
 *   array containing the possible parameters:
 *    teaser, node, type, path
 * @return
 *   FALSE if not allowed
 *   PRINT_ALLOW_NORMAL_LINK if a normal link is allowed
 *   PRINT_ALLOW_BOOK_LINK if a link is allowed in a book node
 */
function print_mail_link_allowed($args) {
  if (!empty($args['teaser']) || !user_access('access print')) {
    // If showing only the teaser or the user is not allowed or link is disabled
    return FALSE;
  }
  if (!empty($args['path'])) {
    $nid = preg_replace('!^node/!', '', drupal_get_normal_path($args['path']));
    if (is_numeric($nid)) {
      $args['node'] = node_load(array('nid' => $nid));
    }
  }
  if (!empty($args['node'])) {
    static $node_type = FALSE;

    $node = $args['node'];
    if ($node_type === FALSE) {
      if (isset($node->type)) {
        $node_type = $node->type;
      }
      else {
        $node_type = '';
      }
    }
    // Node
    $print_mail_node_link_visibility = variable_get('print_mail_node_link_visibility', PRINT_MAIL_NODE_LINK_VISIBILITY_DEFAULT);
    $print_mail_node_link_pages = variable_get('print_mail_node_link_pages', PRINT_MAIL_NODE_LINK_PAGES_DEFAULT);

    if (!empty($node->printing) ||
        !_print_page_match($print_mail_node_link_visibility, $print_mail_node_link_pages)) {
      // Page not in visibility list or we are working!
      return FALSE;
    }
    elseif (isset($args['type']) && ($args['type'] == 'comment') && isset($node_type)) {
      // Link is for a comment, return the configured setting
      return variable_get('print_mail_display_comment_'. $node_type, PRINT_TYPE_COMMENT_LINK_DEFAULT);
    }
    else {
      // Node link
      if (isset($node_type) &&
          !variable_get('print_mail_display_'. $node_type, PRINT_TYPE_SHOW_LINK_DEFAULT)) {
        // Link for this node type is disabled
        return FALSE;
      }
      elseif (isset($node->parent)) {
        // Node is a book;
        $print_mail_book_link = variable_get('print_mail_book_link', PRINT_MAIL_BOOK_LINK_DEFAULT);
        if (!$print_mail_book_link || !user_access('see printer-friendly version')) {
          // Book link is disabled
          return FALSE;
        }
        else {
          return PRINT_ALLOW_BOOK_LINK;
        }
      }
      else {
        return PRINT_ALLOW_NORMAL_LINK;
      }
    }
  }
  else {
    // 'System' page
    $print_mail_sys_link_visibility = variable_get('print_mail_sys_link_visibility', PRINT_MAIL_SYS_LINK_VISIBILITY_DEFAULT);
    $print_mail_sys_link_pages = variable_get('print_mail_sys_link_pages', PRINT_MAIL_SYS_LINK_PAGES_DEFAULT);

    return _print_page_match($print_mail_sys_link_visibility, $print_mail_sys_link_pages);
  }
}
